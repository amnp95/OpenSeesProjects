#include <cmath>  // For abs
#include <iostream>  // For cout
// Function signature
void k_sym_discontinua3_PML22(double* K,double* XYelement, double beta_0_x, double beta_0_y, double L_PML_x,
                                double L_PML_y, double xi, double yj, double rho, double E, double nu) {
    // Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);

    // Continue with the rest of the function...
    // Add your C++ code here
	K[0] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[1] = 0;
	K[2] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[3] = 0;
	K[4] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[5] = 0;
	K[6] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[7] = 0;
	K[8] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[9] = 0;
	K[10] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[11] = 0;
	K[12] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[13] = 0;
	K[14] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[15] = 0;
	K[16] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[17] = 0;
	K[18] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[19] = 0;
	K[20] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[21] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[22] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[23] = 0;
	K[24] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (b * b + 5 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[25] = 0;
	K[26] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[27] = 0;
	K[28] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[29] = 0;
	K[30] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[31] = 0;
	K[32] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[33] = 0;
	K[34] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[35] = 0;
	K[36] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (b * b + 5 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[37] = 0;
	K[38] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[39] = 0;
	K[40] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[41] = 0;
	K[42] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[43] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[44] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[45] = 0;
	K[46] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[47] = 0;
	K[48] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (6 * a * a + 15 * a * xi + 10 * xi * xi)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[49] = 0;
	K[50] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[51] = 0;
	K[52] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[53] = 0;
	K[54] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[55] = 0;
	K[56] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[57] = 0;
	K[58] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[59] = 0;
	K[60] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (6 * a * a + 15 * a * xi + 10 * xi * xi)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[61] = 0;
	K[62] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[63] = 0;
	K[64] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[65] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[66] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[67] = 0;
	K[68] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[69] = 0;
	K[70] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[71] = 0;
	K[72] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[73] = 0;
	K[74] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[75] = 0;
	K[76] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[77] = 0;
	K[78] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[79] = 0;
	K[80] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[81] = 0;
	K[82] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[83] = 0;
	K[84] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[85] = 0;
	K[86] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[87] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[88] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[89] = 0;
	K[90] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[91] = 0;
	K[92] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[93] = 0;
	K[94] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[95] = 0;
	K[96] = (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[97] = (a * b * beta_0_x * beta_0_y * nu * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[98] = 0;
	K[99] = 0;
	K[100] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[101] = 0;
	K[102] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[103] = 0;
	K[104] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[105] = 0;
	K[106] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[107] = (a * b * beta_0_x * beta_0_y * nu * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[108] = (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[109] = 0;
	K[110] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[111] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[112] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[113] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[114] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[115] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[116] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[117] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[118] = 0;
	K[119] = 0;
	K[120] =  - (2 * a * b * beta_0_x * beta_0_y * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);

}


void m_sym_discontinua3_PML22(double* M,double* XYelement, double alpha_0_x, double alpha_0_y, double L_PML_x,
                                double L_PML_y, double xi, double yj, double rho, double E, double nu) {
	// Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);


	// Calculate the mass matrix
	M[0] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[1] = 0;
	M[2] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[3] = 0;
	M[4] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[5] = 0;
	M[6] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[7] = 0;
	M[8] = 0;
	M[9] = 0;
	M[10] = 0;
	M[11] = 0;
	M[12] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[13] = 0;
	M[14] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[15] = 0;
	M[16] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[17] = 0;
	M[18] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[19] = 0;
	M[20] = 0;
	M[21] = 0;
	M[22] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[23] = 0;
	M[24] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[25] = 0;
	M[26] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[27] = 0;
	M[28] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[29] = 0;
	M[30] = 0;
	M[31] = 0;
	M[32] = 0;
	M[33] = 0;
	M[34] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[35] = 0;
	M[36] = (a * b * rho * (10 * L_PML_x * L_PML_x + alpha_0_x * a * a + 5 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[37] = 0;
	M[38] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[39] = 0;
	M[40] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[41] = 0;
	M[42] = 0;
	M[43] = 0;
	M[44] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[45] = 0;
	M[46] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[47] = 0;
	M[48] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[49] = 0;
	M[50] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[51] = 0;
	M[52] = 0;
	M[53] = 0;
	M[54] = 0;
	M[55] = 0;
	M[56] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[57] = 0;
	M[58] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[59] = 0;
	M[60] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + alpha_0_y * b * b + 5 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[61] = 0;
	M[62] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[63] = 0;
	M[64] = 0;
	M[65] = 0;
	M[66] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[67] = 0;
	M[68] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[69] = 0;
	M[70] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[71] = 0;
	M[72] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[73] = 0;
	M[74] = 0;
	M[75] = 0;
	M[76] = 0;
	M[77] = 0;
	M[78] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[79] = 0;
	M[80] = (a * b * rho * (10 * L_PML_x * L_PML_x + 3 * alpha_0_x * a * a + 10 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[81] = 0;
	M[82] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 3 * alpha_0_y * b * b + 10 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[83] = 0;
	M[84] = (a * b * rho * (10 * L_PML_x * L_PML_x + 6 * alpha_0_x * a * a + 15 * alpha_0_x * a * xi + 10 * alpha_0_x * xi * xi) * (10 * L_PML_y * L_PML_y + 6 * alpha_0_y * b * b + 15 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[85] = 0;
	M[86] = 0;
	M[87] = 0;
	M[88] = 0;
	M[89] = 0;
	M[90] = 0;
	M[91] = 0;
	M[92] = 0;
	M[93] = 0;
	M[94] = 0;
	M[95] = 0;
	M[96] = (a * b * (nu * nu - 1) * (3 * L_PML_x * L_PML_x + alpha_0_x * a * a + 3 * alpha_0_x * a * xi + 3 * alpha_0_x * xi * xi) * (3 * L_PML_y * L_PML_y + alpha_0_y * b * b + 3 * alpha_0_y * b * yj + 3 * alpha_0_y * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[97] = (a * b * nu * (nu + 1) * (3 * L_PML_x * L_PML_x + alpha_0_x * a * a + 3 * alpha_0_x * a * xi + 3 * alpha_0_x * xi * xi) * (3 * L_PML_y * L_PML_y + alpha_0_y * b * b + 3 * alpha_0_y * b * yj + 3 * alpha_0_y * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[98] = 0;
	M[99] = 0;
	M[100] = 0;
	M[101] = 0;
	M[102] = 0;
	M[103] = 0;
	M[104] = 0;
	M[105] = 0;
	M[106] = 0;
	M[107] = (a * b * nu * (nu + 1) * (3 * L_PML_x * L_PML_x + alpha_0_x * a * a + 3 * alpha_0_x * a * xi + 3 * alpha_0_x * xi * xi) * (3 * L_PML_y * L_PML_y + alpha_0_y * b * b + 3 * alpha_0_y * b * yj + 3 * alpha_0_y * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[108] = (a * b * (nu * nu - 1) * (3 * L_PML_x * L_PML_x + alpha_0_x * a * a + 3 * alpha_0_x * a * xi + 3 * alpha_0_x * xi * xi) * (3 * L_PML_y * L_PML_y + alpha_0_y * b * b + 3 * alpha_0_y * b * yj + 3 * alpha_0_y * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	M[109] = 0;
	M[110] = 0;
	M[111] = 0;
	M[112] = 0;
	M[113] = 0;
	M[114] = 0;
	M[115] = 0;
	M[116] = 0;
	M[117] = 0;
	M[118] = 0;
	M[119] = 0;
	M[120] =  - (2 * a * b * (nu + 1) * (3 * L_PML_x * L_PML_x + alpha_0_x * a * a + 3 * alpha_0_x * a * xi + 3 * alpha_0_x * xi * xi) * (3 * L_PML_y * L_PML_y + alpha_0_y * b * b + 3 * alpha_0_y * b * yj + 3 * alpha_0_y * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);


}



void c_sym_discontinua3_PML22(double* C,double* XYelement, double alpha_0_x, double alpha_0_y,
							  double beta_0_x, double beta_0_y, double L_PML_x,double L_PML_y, 
								double xi, double yj, double rho, double E, double nu) { 
    // Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);



	C[0] = (a * b * rho * (L_PML_y * L_PML_y * a * a * beta_0_x + 10 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 10 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 5 * L_PML_y * L_PML_y * a * beta_0_x * xi + a * a * alpha_0_x * beta_0_y * yj * yj + a * a * alpha_0_y * beta_0_x * yj * yj + 10 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 10 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 5 * a * alpha_0_x * beta_0_y * xi * yj * yj + 5 * a * alpha_0_y * beta_0_x * xi * yj * yj)) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * rho * (20 * L_PML_x * L_PML_x * beta_0_y * yj + 2 * a * a * alpha_0_x * beta_0_y * yj + 2 * a * a * alpha_0_y * beta_0_x * yj + 20 * alpha_0_x * beta_0_y * xi * xi * yj + 20 * alpha_0_y * beta_0_x * xi * xi * yj + 10 * a * alpha_0_x * beta_0_y * xi * yj + 10 * a * alpha_0_y * beta_0_x * xi * yj)) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * b * rho * (10 * L_PML_x * L_PML_x * beta_0_y + a * a * alpha_0_x * beta_0_y + a * a * alpha_0_y * beta_0_x + 10 * alpha_0_x * beta_0_y * xi * xi + 10 * alpha_0_y * beta_0_x * xi * xi + 5 * a * alpha_0_x * beta_0_y * xi + 5 * a * alpha_0_y * beta_0_x * xi)) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[1] = 0;
	C[2] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[3] = 0;
	C[4] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[5] = 0;
	C[6] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[7] = 0;
	C[8] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[9] = 0;
	C[10] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[11] = 0;
	C[12] = (a * b * rho * (L_PML_y * L_PML_y * a * a * beta_0_x + 10 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 10 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 5 * L_PML_y * L_PML_y * a * beta_0_x * xi + a * a * alpha_0_x * beta_0_y * yj * yj + a * a * alpha_0_y * beta_0_x * yj * yj + 10 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 10 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 5 * a * alpha_0_x * beta_0_y * xi * yj * yj + 5 * a * alpha_0_y * beta_0_x * xi * yj * yj)) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * rho * (20 * L_PML_x * L_PML_x * beta_0_y * yj + 2 * a * a * alpha_0_x * beta_0_y * yj + 2 * a * a * alpha_0_y * beta_0_x * yj + 20 * alpha_0_x * beta_0_y * xi * xi * yj + 20 * alpha_0_y * beta_0_x * xi * xi * yj + 10 * a * alpha_0_x * beta_0_y * xi * yj + 10 * a * alpha_0_y * beta_0_x * xi * yj)) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * b * rho * (10 * L_PML_x * L_PML_x * beta_0_y + a * a * alpha_0_x * beta_0_y + a * a * alpha_0_y * beta_0_x + 10 * alpha_0_x * beta_0_y * xi * xi + 10 * alpha_0_y * beta_0_x * xi * xi + 5 * a * alpha_0_x * beta_0_y * xi + 5 * a * alpha_0_y * beta_0_x * xi)) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[13] = 0;
	C[14] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[15] = 0;
	C[16] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[17] = 0;
	C[18] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[19] = 0;
	C[20] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[21] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[22] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[23] = 0;
	C[24] = (a * a * a * b * beta_0_x * rho) / (90 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[25] = 0;
	C[26] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[27] = 0;
	C[28] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[29] = 0;
	C[30] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[31] = 0;
	C[32] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[33] = 0;
	C[34] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[35] = 0;
	C[36] = (a * a * a * b * beta_0_x * rho) / (90 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[37] = 0;
	C[38] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[39] = 0;
	C[40] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[41] = 0;
	C[42] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[43] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[44] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[45] = 0;
	C[46] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[47] = 0;
	C[48] = (a * a * a * b * beta_0_x * rho) / (15 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (6 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[49] = 0;
	C[50] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[51] = 0;
	C[52] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[53] = 0;
	C[54] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[55] = 0;
	C[56] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[57] = 0;
	C[58] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[59] = 0;
	C[60] = (a * a * a * b * beta_0_x * rho) / (15 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (6 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[61] = 0;
	C[62] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[63] = 0;
	C[64] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[65] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[66] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[67] = 0;
	C[68] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[69] = 0;
	C[70] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[71] = 0;
	C[72] = (a * b * rho * (60 * L_PML_y * L_PML_y * a * a * beta_0_x + 60 * L_PML_x * L_PML_x * b * b * beta_0_y + 100 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 100 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 150 * L_PML_y * L_PML_y * a * beta_0_x * xi + 150 * L_PML_x * L_PML_x * b * beta_0_y * yj + 36 * a * a * alpha_0_x * b * b * beta_0_y + 36 * a * a * alpha_0_y * b * b * beta_0_x + 60 * alpha_0_x * b * b * beta_0_y * xi * xi + 60 * alpha_0_y * b * b * beta_0_x * xi * xi + 60 * a * a * alpha_0_x * beta_0_y * yj * yj + 60 * a * a * alpha_0_y * beta_0_x * yj * yj + 100 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 100 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 90 * a * alpha_0_x * b * b * beta_0_y * xi + 90 * a * alpha_0_y * b * b * beta_0_x * xi + 90 * a * a * alpha_0_x * b * beta_0_y * yj + 90 * a * a * alpha_0_y * b * beta_0_x * yj + 150 * a * alpha_0_x * beta_0_y * xi * yj * yj + 150 * a * alpha_0_y * beta_0_x * xi * yj * yj + 150 * alpha_0_x * b * beta_0_y * xi * xi * yj + 150 * alpha_0_y * b * beta_0_x * xi * xi * yj + 225 * a * alpha_0_x * b * beta_0_y * xi * yj + 225 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[73] = 0;
	C[74] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[75] = 0;
	C[76] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[77] = 0;
	C[78] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[79] = 0;
	C[80] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[81] = 0;
	C[82] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[83] = 0;
	C[84] = (a * b * rho * (60 * L_PML_y * L_PML_y * a * a * beta_0_x + 60 * L_PML_x * L_PML_x * b * b * beta_0_y + 100 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 100 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 150 * L_PML_y * L_PML_y * a * beta_0_x * xi + 150 * L_PML_x * L_PML_x * b * beta_0_y * yj + 36 * a * a * alpha_0_x * b * b * beta_0_y + 36 * a * a * alpha_0_y * b * b * beta_0_x + 60 * alpha_0_x * b * b * beta_0_y * xi * xi + 60 * alpha_0_y * b * b * beta_0_x * xi * xi + 60 * a * a * alpha_0_x * beta_0_y * yj * yj + 60 * a * a * alpha_0_y * beta_0_x * yj * yj + 100 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 100 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 90 * a * alpha_0_x * b * b * beta_0_y * xi + 90 * a * alpha_0_y * b * b * beta_0_x * xi + 90 * a * a * alpha_0_x * b * beta_0_y * yj + 90 * a * a * alpha_0_y * b * beta_0_x * yj + 150 * a * alpha_0_x * beta_0_y * xi * yj * yj + 150 * a * alpha_0_y * beta_0_x * xi * yj * yj + 150 * alpha_0_x * b * beta_0_y * xi * xi * yj + 150 * alpha_0_y * b * beta_0_x * xi * xi * yj + 225 * a * alpha_0_x * b * beta_0_y * xi * yj + 225 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[85] = 0;
	C[86] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[87] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[88] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[89] = 0;
	C[90] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[91] = 0;
	C[92] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[93] = 0;
	C[94] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[95] = 0;
	C[96] = (a * b * (nu * nu - 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[97] = (a * b * nu * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[98] = 0;
	C[99] = 0;
	C[100] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[101] = 0;
	C[102] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[103] = 0;
	C[104] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[105] = 0;
	C[106] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[107] = (a * b * nu * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[108] = (a * b * (nu * nu - 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[109] = 0;
	C[110] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[111] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[112] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[113] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[114] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[115] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[116] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[117] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[118] = 0;
	C[119] = 0;
	C[120] =  - (2 * a * b * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);

}



int main() {
    // Example usage
    /*
    XYelement(1) = 5;
    XYelement(2) = 5;
    XYelement(3) = 5;
    XYelement(4) = 3;
    XYelement(5) = 7;
    XYelement(6) = 3;
    XYelement(7) = 7;
    XYelement(8) = 5;

    beta_0_x = 0.5;
    beta_0_y = 0.7;
    L_PML_x  = 4;
    L_PML_y  = 5.
    xi = 5;
    yj = 3;
    rho = 2000;
    E = 1.e4;
    nu = 0.3;
    */
    double XYelement[8] = { 5, 5, 5, 3, 7, 3, 7, 5};
    double beta_0_x = 2.0;
    double beta_0_y = 3.0;
	double alpha_0_x = 3.0;
	double alpha_0_y = 2.0;
    double L_PML_x  = 4;
    double L_PML_y  = 5;
    double xi = 5;
    double yj = 3;
    double rho = 2000;
    double E = 1.e4;
    double nu = 0.3;
    double* mat = new double[121];
    k_sym_discontinua3_PML22(mat, XYelement, beta_0_x, beta_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
    // Print or use k_PML as needed
    for (int i = 0; i < 11; i++) {
        for (int j = 0; j < 11; j++)
            std::cout << mat[i*11+j] << " ";
        std::cout << std::endl;
    }
	m_sym_discontinua3_PML22(mat, XYelement, alpha_0_x, alpha_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
	for (int i = 0; i < 11; i++) {
        for (int j = 0; j < 11; j++)
            std::cout << mat[i*11+j] << " ";
        std::cout << std::endl;
    }
	c_sym_discontinua3_PML22(mat, XYelement, alpha_0_x, alpha_0_y,beta_0_x, beta_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
	for (int i = 0; i < 11; i++) {
        for (int j = 0; j < 11; j++)
            std::cout << mat[i*11+j] << " ";
        std::cout << std::endl;
    }	
    return 0;
}
