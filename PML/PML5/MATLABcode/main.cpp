#include <cmath>  // For abs
#include <iostream>  // For cout
// Function signature
void k_sym_discontinua3_PML22(double* K,double* XYelement, double beta_0_x, double beta_0_y, double L_PML_x,
                                double L_PML_y, double xi, double yj, double rho, double E, double nu) {
    // Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);

	K[0] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[1] = 0;
	K[2] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[3] = 0;
	K[4] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[5] = 0;
	K[6] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[7] = 0;
	K[8] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[9] = 0;
	K[10] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[11] =  - (b * beta_0_y * (9 * b * b + 20 * b * yj + 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[12] = 0;
	K[13] = 0;
	K[14] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[15] = 0;
	K[16] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[17] = 0;
	K[18] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[19] = 0;
	K[20] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[21] = 0;
	K[22] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[23] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[24] = 0;
	K[25] = (a * beta_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[26] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[27] = 0;
	K[28] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (b * b + 5 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[29] = 0;
	K[30] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[31] = 0;
	K[32] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[33] = 0;
	K[34] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[35] = 0;
	K[36] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[37] =  - (b * beta_0_y * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[38] = 0;
	K[39] = 0;
	K[40] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[41] = 0;
	K[42] = (a * b * beta_0_x * beta_0_y * rho * (a * a + 5 * a * xi + 10 * xi * xi) * (b * b + 5 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[43] = 0;
	K[44] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[45] = 0;
	K[46] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[47] = 0;
	K[48] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[49] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[50] = 0;
	K[51] =  - (a * beta_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[52] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[53] = 0;
	K[54] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[55] = 0;
	K[56] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (6 * a * a + 15 * a * xi + 10 * xi * xi)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[57] = 0;
	K[58] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[59] = 0;
	K[60] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[61] = 0;
	K[62] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[63] = (b * beta_0_y * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[64] = 0;
	K[65] = 0;
	K[66] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[67] = 0;
	K[68] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (3 * a * a + 10 * a * xi + 10 * xi * xi)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[69] = 0;
	K[70] = (a * b * beta_0_x * beta_0_y * rho * (b * b + 5 * b * yj + 10 * yj * yj) * (6 * a * a + 15 * a * xi + 10 * xi * xi)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[71] = 0;
	K[72] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[73] = 0;
	K[74] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[75] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[76] = 0;
	K[77] =  - (a * beta_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[78] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[79] = 0;
	K[80] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[81] = 0;
	K[82] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[83] = 0;
	K[84] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[85] = 0;
	K[86] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[87] = 0;
	K[88] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[89] = (b * beta_0_y * (9 * b * b + 20 * b * yj + 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[90] = 0;
	K[91] = 0;
	K[92] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[93] = 0;
	K[94] = (a * b * beta_0_x * beta_0_y * rho * (3 * a * a + 10 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (3600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[95] = 0;
	K[96] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (3 * b * b + 10 * b * yj + 10 * yj * yj)) / (1800 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[97] = 0;
	K[98] = (a * b * beta_0_x * beta_0_y * rho * (6 * a * a + 15 * a * xi + 10 * xi * xi) * (6 * b * b + 15 * b * yj + 10 * yj * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[99] = 0;
	K[100] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[101] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[102] = 0;
	K[103] = (a * beta_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[104] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[105] = 0;
	K[106] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[107] = 0;
	K[108] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[109] = 0;
	K[110] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[111] = 0;
	K[112] =  - (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[113] =  - (a * b * beta_0_x * beta_0_y * nu * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[114] = 0;
	K[115] =  - (a * b * b * beta_0_x * beta_0_y * (nu * nu - 1) * (b + 2 * yj) * (a * a + 3 * a * xi + 3 * xi * xi)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[116] =  - (a * a * b * beta_0_x * beta_0_y * nu * (a + 2 * xi) * (nu + 1) * (b * b + 3 * b * yj + 3 * yj * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[117] = 0;
	K[118] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[119] = 0;
	K[120] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[121] = 0;
	K[122] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[123] = 0;
	K[124] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[125] =  - (a * b * beta_0_x * beta_0_y * nu * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[126] =  - (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[127] = 0;
	K[128] =  - (a * b * b * beta_0_x * beta_0_y * nu * (b + 2 * yj) * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[129] =  - (a * a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a + 2 * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[130] =  - (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[131] = (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[132] = (a * beta_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[133] = (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[134] = (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[135] =  - (b * beta_0_y * (b * b + 4 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[136] =  - (a * beta_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	K[137] =  - (b * beta_0_y * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	K[138] = 0;
	K[139] = 0;
	K[140] = (2 * a * b * beta_0_x * beta_0_y * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[141] = 0;
	K[142] = 0;
	K[143] = (b * beta_0_y * (9 * b * b + 20 * b * yj + 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[144] = 0;
	K[145] = (b * beta_0_y * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[146] = 0;
	K[147] =  - (b * beta_0_y * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[148] = 0;
	K[149] =  - (b * beta_0_y * (9 * b * b + 20 * b * yj + 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	K[150] = 0;
	K[151] =  - (a * b * b * beta_0_x * beta_0_y * (nu * nu - 1) * (b + 2 * yj) * (a * a + 3 * a * xi + 3 * xi * xi)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[152] =  - (a * b * b * beta_0_x * beta_0_y * nu * (b + 2 * yj) * (nu + 1) * (a * a + 3 * a * xi + 3 * xi * xi)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[153] = 0;
	K[154] =  - (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a * a + 3 * a * xi + 3 * xi * xi) * (2 * b * b + 5 * b * yj + 5 * yj * yj)) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[155] =  - (a * a * b * b * beta_0_x * beta_0_y * nu * (a + 2 * xi) * (b + 2 * yj) * (nu + 1)) / (36 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[156] = 0;
	K[157] =  - (a * beta_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[158] = 0;
	K[159] = (a * beta_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[160] = 0;
	K[161] = (a * beta_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[162] = 0;
	K[163] =  - (a * beta_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	K[164] =  - (a * a * b * beta_0_x * beta_0_y * nu * (a + 2 * xi) * (nu + 1) * (b * b + 3 * b * yj + 3 * yj * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[165] =  - (a * a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (a + 2 * xi) * (b * b + 3 * b * yj + 3 * yj * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[166] = 0;
	K[167] =  - (a * a * b * b * beta_0_x * beta_0_y * nu * (a + 2 * xi) * (b + 2 * yj) * (nu + 1)) / (36 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	K[168] =  - (a * b * beta_0_x * beta_0_y * (nu * nu - 1) * (b * b + 3 * b * yj + 3 * yj * yj) * (2 * a * a + 5 * a * xi + 5 * xi * xi)) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	for (int i = 64; i < 169; i++) {
		K[i] = -K[i];
	}
}


void m_sym_discontinua3_PML22(double* M,double* XYelement, double alpha_0_x, double alpha_0_y, double L_PML_x,
                                double L_PML_y, double xi, double yj, double rho, double E, double nu) {
	// Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);


	// Calculate the mass matrix
	M[0] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[1] = 0;
	M[2] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[3] = 0;
	M[4] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[5] = 0;
	M[6] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[7] = 0;
	M[8] = 0;
	M[9] = 0;
	M[10] = 0;
	M[11] = 0;
	M[12] = 0;
	M[13] = 0;
	M[14] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[15] = 0;
	M[16] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[17] = 0;
	M[18] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[19] = 0;
	M[20] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[21] = 0;
	M[22] = 0;
	M[23] = 0;
	M[24] = 0;
	M[25] = 0;
	M[26] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[27] = 0;
	M[28] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[29] = 0;
	M[30] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[31] = 0;
	M[32] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[33] = 0;
	M[34] = 0;
	M[35] = 0;
	M[36] = 0;
	M[37] = 0;
	M[38] = 0;
	M[39] = 0;
	M[40] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[41] = 0;
	M[42] = (a * b * rho * (4 * L_PML_x + a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[43] = 0;
	M[44] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[45] = 0;
	M[46] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[47] = 0;
	M[48] = 0;
	M[49] = 0;
	M[50] = 0;
	M[51] = 0;
	M[52] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[53] = 0;
	M[54] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[55] = 0;
	M[56] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[57] = 0;
	M[58] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[59] = 0;
	M[60] = 0;
	M[61] = 0;
	M[62] = 0;
	M[63] = 0;
	M[64] = 0;
	M[65] = 0;
	M[66] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[67] = 0;
	M[68] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[69] = 0;
	M[70] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[71] = 0;
	M[72] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[73] = 0;
	M[74] = 0;
	M[75] = 0;
	M[76] = 0;
	M[77] = 0;
	M[78] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[79] = 0;
	M[80] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[81] = 0;
	M[82] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[83] = 0;
	M[84] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[85] = 0;
	M[86] = 0;
	M[87] = 0;
	M[88] = 0;
	M[89] = 0;
	M[90] = 0;
	M[91] = 0;
	M[92] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[93] = 0;
	M[94] = (a * b * rho * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[95] = 0;
	M[96] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[97] = 0;
	M[98] = (a * b * rho * (4 * L_PML_x + 3 * a * alpha_0_x + 4 * alpha_0_x * xi) * (4 * L_PML_y + 3 * alpha_0_y * b + 4 * alpha_0_y * yj)) / (144 * L_PML_x * L_PML_y);
	M[99] = 0;
	M[100] = 0;
	M[101] = 0;
	M[102] = 0;
	M[103] = 0;
	M[104] = 0;
	M[105] = 0;
	M[106] = 0;
	M[107] = 0;
	M[108] = 0;
	M[109] = 0;
	M[110] = 0;
	M[111] = 0;
	M[112] = (a * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (4 * E * L_PML_x * L_PML_y);
	M[113] = (a * b * nu * (nu + 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (4 * E * L_PML_x * L_PML_y);
	M[114] = 0;
	M[115] = (a * alpha_0_y * b * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi)) / (12 * E * L_PML_x * L_PML_y);
	M[116] = (a * a * alpha_0_x * b * nu * (nu + 1) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);
	M[117] = 0;
	M[118] = 0;
	M[119] = 0;
	M[120] = 0;
	M[121] = 0;
	M[122] = 0;
	M[123] = 0;
	M[124] = 0;
	M[125] = (a * b * nu * (nu + 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (4 * E * L_PML_x * L_PML_y);
	M[126] = (a * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (4 * E * L_PML_x * L_PML_y);
	M[127] = 0;
	M[128] = (a * alpha_0_y * b * b * nu * (nu + 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi)) / (12 * E * L_PML_x * L_PML_y);
	M[129] = (a * a * alpha_0_x * b * (nu * nu - 1) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);
	M[130] = 0;
	M[131] = 0;
	M[132] = 0;
	M[133] = 0;
	M[134] = 0;
	M[135] = 0;
	M[136] = 0;
	M[137] = 0;
	M[138] = 0;
	M[139] = 0;
	M[140] =  - (a * b * (nu + 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (2 * E * L_PML_x * L_PML_y);
	M[141] = 0;
	M[142] = 0;
	M[143] = 0;
	M[144] = 0;
	M[145] = 0;
	M[146] = 0;
	M[147] = 0;
	M[148] = 0;
	M[149] = 0;
	M[150] = 0;
	M[151] = (a * alpha_0_y * b * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi)) / (12 * E * L_PML_x * L_PML_y);
	M[152] = (a * alpha_0_y * b * b * nu * (nu + 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi)) / (12 * E * L_PML_x * L_PML_y);
	M[153] = 0;
	M[154] = (a * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);
	M[155] = (a * a * alpha_0_x * alpha_0_y * b * b * nu * (nu + 1)) / (36 * E * L_PML_x * L_PML_y);
	M[156] = 0;
	M[157] = 0;
	M[158] = 0;
	M[159] = 0;
	M[160] = 0;
	M[161] = 0;
	M[162] = 0;
	M[163] = 0;
	M[164] = (a * a * alpha_0_x * b * nu * (nu + 1) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);
	M[165] = (a * a * alpha_0_x * b * (nu * nu - 1) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);
	M[166] = 0;
	M[167] = (a * a * alpha_0_x * alpha_0_y * b * b * nu * (nu + 1)) / (36 * E * L_PML_x * L_PML_y);
	M[168] = (a * b * (nu * nu - 1) * (2 * L_PML_x + a * alpha_0_x + 2 * alpha_0_x * xi) * (2 * L_PML_y + alpha_0_y * b + 2 * alpha_0_y * yj)) / (12 * E * L_PML_x * L_PML_y);

}



void c_sym_discontinua3_PML22(double* C,double* XYelement, double alpha_0_x, double alpha_0_y,
							  double beta_0_x, double beta_0_y, double L_PML_x,double L_PML_y, 
								double xi, double yj, double rho, double E, double nu) { 
    // Define variables
    double a, b;  // Variables a and b

    // Calculate variables a and b
    a = std::abs(XYelement[6] - XYelement[0]);
    b = std::abs(XYelement[1] - XYelement[3]);



	C[0] = (a * b * rho * (L_PML_y * L_PML_y * a * a * beta_0_x + 10 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 10 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 5 * L_PML_y * L_PML_y * a * beta_0_x * xi + a * a * alpha_0_x * beta_0_y * yj * yj + a * a * alpha_0_y * beta_0_x * yj * yj + 10 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 10 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 5 * a * alpha_0_x * beta_0_y * xi * yj * yj + 5 * a * alpha_0_y * beta_0_x * xi * yj * yj)) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * rho * (20 * L_PML_x * L_PML_x * beta_0_y * yj + 2 * a * a * alpha_0_x * beta_0_y * yj + 2 * a * a * alpha_0_y * beta_0_x * yj + 20 * alpha_0_x * beta_0_y * xi * xi * yj + 20 * alpha_0_y * beta_0_x * xi * xi * yj + 10 * a * alpha_0_x * beta_0_y * xi * yj + 10 * a * alpha_0_y * beta_0_x * xi * yj)) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * b * rho * (10 * L_PML_x * L_PML_x * beta_0_y + a * a * alpha_0_x * beta_0_y + a * a * alpha_0_y * beta_0_x + 10 * alpha_0_x * beta_0_y * xi * xi + 10 * alpha_0_y * beta_0_x * xi * xi + 5 * a * alpha_0_x * beta_0_y * xi + 5 * a * alpha_0_y * beta_0_x * xi)) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[1] = 0;
	C[2] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[3] = 0;
	C[4] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[5] = 0;
	C[6] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[7] = 0;
	C[8] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[9] = 0;
	C[10] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[11] =  - b / 6 - (b * (9 * alpha_0_y * b * b + 20 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[12] = 0;
	C[13] = 0;
	C[14] = (a * b * rho * (L_PML_y * L_PML_y * a * a * beta_0_x + 10 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 10 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 5 * L_PML_y * L_PML_y * a * beta_0_x * xi + a * a * alpha_0_x * beta_0_y * yj * yj + a * a * alpha_0_y * beta_0_x * yj * yj + 10 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 10 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 5 * a * alpha_0_x * beta_0_y * xi * yj * yj + 5 * a * alpha_0_y * beta_0_x * xi * yj * yj)) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * rho * (20 * L_PML_x * L_PML_x * beta_0_y * yj + 2 * a * a * alpha_0_x * beta_0_y * yj + 2 * a * a * alpha_0_y * beta_0_x * yj + 20 * alpha_0_x * beta_0_y * xi * xi * yj + 20 * alpha_0_y * beta_0_x * xi * xi * yj + 10 * a * alpha_0_x * beta_0_y * xi * yj + 10 * a * alpha_0_y * beta_0_x * xi * yj)) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * b * b * b * rho * (10 * L_PML_x * L_PML_x * beta_0_y + a * a * alpha_0_x * beta_0_y + a * a * alpha_0_y * beta_0_x + 10 * alpha_0_x * beta_0_y * xi * xi + 10 * alpha_0_y * beta_0_x * xi * xi + 5 * a * alpha_0_x * beta_0_y * xi + 5 * a * alpha_0_y * beta_0_x * xi)) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[15] = 0;
	C[16] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[17] = 0;
	C[18] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[19] = 0;
	C[20] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[21] = 0;
	C[22] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[23] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[24] = 0;
	C[25] = (a * alpha_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x) - a / 6;
	C[26] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[27] = 0;
	C[28] = (a * a * a * b * beta_0_x * rho) / (90 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[29] = 0;
	C[30] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[31] = 0;
	C[32] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[33] = 0;
	C[34] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[35] = 0;
	C[36] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[37] = b / 6 - (alpha_0_y * b * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[38] = 0;
	C[39] = 0;
	C[40] = (a * a * a * b * beta_0_x * rho) / (180 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[41] = 0;
	C[42] = (a * a * a * b * beta_0_x * rho) / (90 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[43] = 0;
	C[44] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[45] = 0;
	C[46] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[47] = 0;
	C[48] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[49] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[50] = 0;
	C[51] = a / 6 - (a * alpha_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[52] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[53] = 0;
	C[54] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[55] = 0;
	C[56] = (a * a * a * b * beta_0_x * rho) / (15 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (6 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[57] = 0;
	C[58] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[59] = 0;
	C[60] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[61] = 0;
	C[62] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[63] = (alpha_0_y * b * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y) - b / 6;
	C[64] = 0;
	C[65] = 0;
	C[66] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[67] = 0;
	C[68] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (180 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (600 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (180 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[69] = 0;
	C[70] = (a * a * a * b * beta_0_x * rho) / (15 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (90 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (9 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (6 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (9 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (150 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (90 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (15 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (9 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (6 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[71] = 0;
	C[72] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[73] = 0;
	C[74] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[75] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[76] = 0;
	C[77] =  - a / 6 - (a * alpha_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[78] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[79] = 0;
	C[80] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[81] = 0;
	C[82] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[83] = 0;
	C[84] = (a * b * rho * (60 * L_PML_y * L_PML_y * a * a * beta_0_x + 60 * L_PML_x * L_PML_x * b * b * beta_0_y + 100 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 100 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 150 * L_PML_y * L_PML_y * a * beta_0_x * xi + 150 * L_PML_x * L_PML_x * b * beta_0_y * yj + 36 * a * a * alpha_0_x * b * b * beta_0_y + 36 * a * a * alpha_0_y * b * b * beta_0_x + 60 * alpha_0_x * b * b * beta_0_y * xi * xi + 60 * alpha_0_y * b * b * beta_0_x * xi * xi + 60 * a * a * alpha_0_x * beta_0_y * yj * yj + 60 * a * a * alpha_0_y * beta_0_x * yj * yj + 100 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 100 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 90 * a * alpha_0_x * b * b * beta_0_y * xi + 90 * a * alpha_0_y * b * b * beta_0_x * xi + 90 * a * a * alpha_0_x * b * beta_0_y * yj + 90 * a * a * alpha_0_y * b * beta_0_x * yj + 150 * a * alpha_0_x * beta_0_y * xi * yj * yj + 150 * a * alpha_0_y * beta_0_x * xi * yj * yj + 150 * alpha_0_x * b * beta_0_y * xi * xi * yj + 150 * alpha_0_y * b * beta_0_x * xi * xi * yj + 225 * a * alpha_0_x * b * beta_0_y * xi * yj + 225 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[85] = 0;
	C[86] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[87] = 0;
	C[88] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[89] = b / 6 + (b * (9 * alpha_0_y * b * b + 20 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[90] = 0;
	C[91] = 0;
	C[92] = (a * a * a * b * beta_0_x * rho) / (60 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (30 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (18 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (12 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[93] = 0;
	C[94] = (a * a * a * b * beta_0_x * rho) / (120 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (120 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (36 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (36 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (36 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (36 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (400 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (120 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (36 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[95] = 0;
	C[96] = (a * a * a * b * beta_0_x * rho) / (30 * L_PML_x * L_PML_x) + (a * b * b * b * beta_0_y * rho) / (60 * L_PML_y * L_PML_y) + (a * b * beta_0_x * rho * xi * xi) / (18 * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * rho * xi) / (12 * L_PML_x * L_PML_x) + (a * b * beta_0_y * rho * yj * yj) / (18 * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * rho * yj) / (18 * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x * rho) / (100 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * rho * xi * xi) / (60 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * rho * xi) / (40 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * rho * yj * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * rho * yj) / (30 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * rho * xi * xi * yj * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * rho * xi * xi * yj) / (18 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * rho * xi * yj * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * rho * xi * yj) / (12 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[97] = 0;
	C[98] = (a * b * rho * (60 * L_PML_y * L_PML_y * a * a * beta_0_x + 60 * L_PML_x * L_PML_x * b * b * beta_0_y + 100 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 100 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 150 * L_PML_y * L_PML_y * a * beta_0_x * xi + 150 * L_PML_x * L_PML_x * b * beta_0_y * yj + 36 * a * a * alpha_0_x * b * b * beta_0_y + 36 * a * a * alpha_0_y * b * b * beta_0_x + 60 * alpha_0_x * b * b * beta_0_y * xi * xi + 60 * alpha_0_y * b * b * beta_0_x * xi * xi + 60 * a * a * alpha_0_x * beta_0_y * yj * yj + 60 * a * a * alpha_0_y * beta_0_x * yj * yj + 100 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 100 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 90 * a * alpha_0_x * b * b * beta_0_y * xi + 90 * a * alpha_0_y * b * b * beta_0_x * xi + 90 * a * a * alpha_0_x * b * beta_0_y * yj + 90 * a * a * alpha_0_y * b * beta_0_x * yj + 150 * a * alpha_0_x * beta_0_y * xi * yj * yj + 150 * a * alpha_0_y * beta_0_x * xi * yj * yj + 150 * alpha_0_x * b * beta_0_y * xi * xi * yj + 150 * alpha_0_y * b * beta_0_x * xi * xi * yj + 225 * a * alpha_0_x * b * beta_0_y * xi * yj + 225 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (900 * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[99] = 0;
	C[100] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[101] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[102] = 0;
	C[103] = a / 6 + (a * alpha_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[104] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[105] = 0;
	C[106] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[107] = 0;
	C[108] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[109] = 0;
	C[110] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[111] = 0;
	C[112] =  - (a * b * (nu * nu - 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[113] =  - (a * b * nu * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[114] = 0;
	C[115] = (a * b * b * b * beta_0_y) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * b * beta_0_y * nu * nu) / (6 * E * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * nu * yj) / (3 * E * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[116] =  - (a * a * b * nu * (a + 2 * xi) * (nu + 1) * (3 * L_PML_y * L_PML_y * beta_0_x + alpha_0_x * b * b * beta_0_y + alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * beta_0_y * yj * yj + 3 * alpha_0_y * beta_0_x * yj * yj + 3 * alpha_0_x * b * beta_0_y * yj + 3 * alpha_0_y * b * beta_0_x * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[117] = 0;
	C[118] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[119] = 0;
	C[120] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[121] = 0;
	C[122] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[123] = 0;
	C[124] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[125] =  - (a * b * nu * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[126] =  - (a * b * (nu * nu - 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[127] = 0;
	C[128] =  - (a * b * b * b * beta_0_y * nu * nu) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * b * beta_0_y * nu) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * nu * yj) / (3 * E * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[129] =  - (a * a * b * (nu * nu - 1) * (a + 2 * xi) * (3 * L_PML_y * L_PML_y * beta_0_x + alpha_0_x * b * b * beta_0_y + alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * beta_0_y * yj * yj + 3 * alpha_0_y * beta_0_x * yj * yj + 3 * alpha_0_x * b * beta_0_y * yj + 3 * alpha_0_y * b * beta_0_x * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[130] =  - a / 2 - (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[131] = b / 2 + (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[132] = a / 2 + (a * alpha_0_x * (a * a + 4 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[133] = b / 2 + (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[134] = a / 2 + (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[135] =  - b / 2 - (b * (alpha_0_y * b * b + 4 * alpha_0_y * b * yj + 6 * alpha_0_y * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[136] =  - a / 2 - (a * alpha_0_x * (3 * a * a + 8 * a * xi + 6 * xi * xi)) / (12 * L_PML_x * L_PML_x);
	C[137] =  - b / 2 - (alpha_0_y * b * (3 * b * b + 8 * b * yj + 6 * yj * yj)) / (12 * L_PML_y * L_PML_y);
	C[138] = 0;
	C[139] = 0;
	C[140] = (2 * a * b * (nu + 1) * (3 * L_PML_y * L_PML_y * a * a * beta_0_x + 3 * L_PML_x * L_PML_x * b * b * beta_0_y + 9 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 9 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 9 * L_PML_y * L_PML_y * a * beta_0_x * xi + 9 * L_PML_x * L_PML_x * b * beta_0_y * yj + a * a * alpha_0_x * b * b * beta_0_y + a * a * alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * b * b * beta_0_y * xi * xi + 3 * alpha_0_y * b * b * beta_0_x * xi * xi + 3 * a * a * alpha_0_x * beta_0_y * yj * yj + 3 * a * a * alpha_0_y * beta_0_x * yj * yj + 9 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 9 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 3 * a * alpha_0_x * b * b * beta_0_y * xi + 3 * a * alpha_0_y * b * b * beta_0_x * xi + 3 * a * a * alpha_0_x * b * beta_0_y * yj + 3 * a * a * alpha_0_y * b * beta_0_x * yj + 9 * a * alpha_0_x * beta_0_y * xi * yj * yj + 9 * a * alpha_0_y * beta_0_x * xi * yj * yj + 9 * alpha_0_x * b * beta_0_y * xi * xi * yj + 9 * alpha_0_y * b * beta_0_x * xi * xi * yj + 9 * a * alpha_0_x * b * beta_0_y * xi * yj + 9 * a * alpha_0_y * b * beta_0_x * xi * yj)) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[141] = 0;
	C[142] = 0;
	C[143] = b / 6 + (b * (9 * alpha_0_y * b * b + 20 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[144] = 0;
	C[145] = (alpha_0_y * b * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y) - b / 6;
	C[146] = 0;
	C[147] = b / 6 - (alpha_0_y * b * (b * b - 10 * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[148] = 0;
	C[149] =  - b / 6 - (b * (9 * alpha_0_y * b * b + 20 * alpha_0_y * b * yj + 10 * alpha_0_y * yj * yj)) / (60 * L_PML_y * L_PML_y);
	C[150] = 0;
	C[151] = (a * b * b * b * beta_0_y) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * b * beta_0_y * nu * nu) / (6 * E * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * nu * yj) / (3 * E * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * b * beta_0_y) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * b * beta_0_x) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * b * beta_0_y * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * b * beta_0_x * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * b * beta_0_y * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * b * beta_0_x * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[152] =  - (a * b * b * b * beta_0_y * nu * nu) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * b * beta_0_y * nu) / (6 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * nu * yj) / (3 * E * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi) / (6 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[153] = 0;
	C[154] = (a * a * a * b * beta_0_x) / (9 * E * L_PML_x * L_PML_x) + (2 * a * b * b * b * beta_0_y) / (15 * E * L_PML_y * L_PML_y) - (a * a * a * b * beta_0_x * nu * nu) / (9 * E * L_PML_x * L_PML_x) - (2 * a * b * b * b * beta_0_y * nu * nu) / (15 * E * L_PML_y * L_PML_y) + (a * b * beta_0_x * xi * xi) / (3 * E * L_PML_x * L_PML_x) + (a * a * b * beta_0_x * xi) / (3 * E * L_PML_x * L_PML_x) + (a * b * beta_0_y * yj * yj) / (3 * E * L_PML_y * L_PML_y) + (a * b * b * beta_0_y * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * beta_0_x * nu * nu * xi * xi) / (3 * E * L_PML_x * L_PML_x) - (a * a * b * beta_0_x * nu * nu * xi) / (3 * E * L_PML_x * L_PML_x) - (a * b * beta_0_y * nu * nu * yj * yj) / (3 * E * L_PML_y * L_PML_y) - (a * b * b * beta_0_y * nu * nu * yj) / (3 * E * L_PML_y * L_PML_y) + (2 * a * a * a * alpha_0_x * b * b * b * beta_0_y) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (2 * a * a * a * alpha_0_y * b * b * b * beta_0_x) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (2 * a * alpha_0_x * b * b * b * beta_0_y * xi * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (2 * a * alpha_0_y * b * b * b * beta_0_x * xi * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (2 * a * a * alpha_0_x * b * b * b * beta_0_y * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (2 * a * a * alpha_0_y * b * b * b * beta_0_x * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * beta_0_y * yj * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_x * b * b * beta_0_y * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * beta_0_x * yj * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * a * alpha_0_y * b * b * beta_0_x * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * beta_0_y * xi * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_x * b * b * beta_0_y * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * beta_0_x * xi * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * alpha_0_y * b * b * beta_0_x * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * beta_0_y * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_x * b * b * beta_0_y * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * beta_0_x * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) + (a * a * alpha_0_y * b * b * beta_0_x * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * a * alpha_0_x * b * b * b * beta_0_y * nu * nu * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (2 * a * a * alpha_0_y * b * b * b * beta_0_x * nu * nu * xi) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * beta_0_y * nu * nu * yj * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_x * b * b * beta_0_y * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * beta_0_x * nu * nu * yj * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * a * alpha_0_y * b * b * beta_0_x * nu * nu * yj) / (9 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * beta_0_y * nu * nu * xi * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * beta_0_x * nu * nu * xi * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * beta_0_y * nu * nu * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_x * b * b * beta_0_y * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * beta_0_x * nu * nu * xi * yj * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * a * alpha_0_y * b * b * beta_0_x * nu * nu * xi * yj) / (3 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[155] =  - (a * a * b * b * nu * (a + 2 * xi) * (b + 2 * yj) * (alpha_0_x * beta_0_y + alpha_0_y * beta_0_x) * (nu + 1)) / (36 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[156] = 0;
	C[157] = a / 6 - (a * alpha_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[158] = 0;
	C[159] = (a * alpha_0_x * (a * a - 10 * xi * xi)) / (60 * L_PML_x * L_PML_x) - a / 6;
	C[160] = 0;
	C[161] = a / 6 + (a * alpha_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[162] = 0;
	C[163] =  - a / 6 - (a * alpha_0_x * (9 * a * a + 20 * a * xi + 10 * xi * xi)) / (60 * L_PML_x * L_PML_x);
	C[164] =  - (a * a * b * nu * (a + 2 * xi) * (nu + 1) * (3 * L_PML_y * L_PML_y * beta_0_x + alpha_0_x * b * b * beta_0_y + alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * beta_0_y * yj * yj + 3 * alpha_0_y * beta_0_x * yj * yj + 3 * alpha_0_x * b * beta_0_y * yj + 3 * alpha_0_y * b * beta_0_x * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[165] =  - (a * a * b * (nu * nu - 1) * (a + 2 * xi) * (3 * L_PML_y * L_PML_y * beta_0_x + alpha_0_x * b * b * beta_0_y + alpha_0_y * b * b * beta_0_x + 3 * alpha_0_x * beta_0_y * yj * yj + 3 * alpha_0_y * beta_0_x * yj * yj + 3 * alpha_0_x * b * beta_0_y * yj + 3 * alpha_0_y * b * beta_0_x * yj)) / (18 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[166] = 0;
	C[167] =  - (a * a * b * b * nu * (a + 2 * xi) * (b + 2 * yj) * (alpha_0_x * beta_0_y + alpha_0_y * beta_0_x) * (nu + 1)) / (36 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	C[168] =  - (a * b * b * b * (nu * nu - 1) * (5 * L_PML_x * L_PML_x * beta_0_y + 2 * a * a * alpha_0_x * beta_0_y + 2 * a * a * alpha_0_y * beta_0_x + 5 * alpha_0_x * beta_0_y * xi * xi + 5 * alpha_0_y * beta_0_x * xi * xi + 5 * a * alpha_0_x * beta_0_y * xi + 5 * a * alpha_0_y * beta_0_x * xi)) / (45 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * b * (nu * nu - 1) * (2 * L_PML_y * L_PML_y * a * a * beta_0_x + 5 * L_PML_y * L_PML_y * beta_0_x * xi * xi + 5 * L_PML_x * L_PML_x * beta_0_y * yj * yj + 5 * L_PML_y * L_PML_y * a * beta_0_x * xi + 2 * a * a * alpha_0_x * beta_0_y * yj * yj + 2 * a * a * alpha_0_y * beta_0_x * yj * yj + 5 * alpha_0_x * beta_0_y * xi * xi * yj * yj + 5 * alpha_0_y * beta_0_x * xi * xi * yj * yj + 5 * a * alpha_0_x * beta_0_y * xi * yj * yj + 5 * a * alpha_0_y * beta_0_x * xi * yj * yj)) / (15 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y) - (a * b * b * (nu * nu - 1) * (10 * L_PML_x * L_PML_x * beta_0_y * yj + 4 * a * a * alpha_0_x * beta_0_y * yj + 4 * a * a * alpha_0_y * beta_0_x * yj + 10 * alpha_0_x * beta_0_y * xi * xi * yj + 10 * alpha_0_y * beta_0_x * xi * xi * yj + 10 * a * alpha_0_x * beta_0_y * xi * yj + 10 * a * alpha_0_y * beta_0_x * xi * yj)) / (30 * E * L_PML_x * L_PML_x * L_PML_y * L_PML_y);
	for (int i = 64; i<= 168; i++)
		C[i] = -C[i];
}



int main() {
    // Example usage
    /*
    XYelement(1) = 5;
    XYelement(2) = 5;
    XYelement(3) = 5;
    XYelement(4) = 3;
    XYelement(5) = 7;
    XYelement(6) = 3;
    XYelement(7) = 7;
    XYelement(8) = 5;

    beta_0_x = 0.5;
    beta_0_y = 0.7;
    L_PML_x  = 4;
    L_PML_y  = 5.
    xi = 5;
    yj = 3;
    rho = 2000;
    E = 1.e4;
    nu = 0.3;
    */
    double XYelement[8] = { 5, 5, 5, 3, 7, 3, 7, 5};
    double beta_0_x = 2.0;
    double beta_0_y = 3.0;
	double alpha_0_x = 3.0;
	double alpha_0_y = 2.0;
    double L_PML_x  = 4;
    double L_PML_y  = 5;
    double xi = 5;
    double yj = 3;
    double rho = 2000;
    double E = 1.e4;
    double nu = 0.3;
    double* mat = new double[169];
    k_sym_discontinua3_PML22(mat, XYelement, beta_0_x, beta_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
    // Print or use k_PML as needed
    for (int i = 0; i < 13; i++) {
        for (int j = 0; j < 13; j++)
            std::cout << mat[i*13+j] << " ";
        std::cout << std::endl;
    }
	m_sym_discontinua3_PML22(mat, XYelement, alpha_0_x, alpha_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
	for (int i = 0; i < 13; i++) {
        for (int j = 0; j < 13; j++)
            std::cout << mat[i*13+j] << " ";
        std::cout << std::endl;
    }
	c_sym_discontinua3_PML22(mat, XYelement, alpha_0_x, alpha_0_y,beta_0_x, beta_0_y, L_PML_x, L_PML_y, xi, yj, rho, E, nu);
	std:: cout << "====================================================================================\n";
	for (int i = 0; i < 13; i++) {
        for (int j = 0; j < 13; j++)
            std::cout << mat[i*13+j] << " ";
        std::cout << std::endl;
    }	
    return 0;
}
